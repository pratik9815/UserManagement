@model UserManagement.Application.DTOs.LoginRequest
@{
    ViewData["Title"] = "Login";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
      integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg=="
      crossorigin="anonymous" referrerpolicy="no-referrer" />

<style>
  .form-container {
        max-width: 450px;
        margin: 2rem auto;
        padding: 2rem;
    }

    .form-control {
        border-radius: 8px;
        padding: 0.75rem 1rem;
    }

    .avatar-placeholder {
        width: 60px;
        height: 60px;
        background-color: #cccccc;
        border-radius: 50%;
        margin: 0 auto 2rem;
    }

    .btn-login {
        background-color: #f6f6f6;
        border: 1px solid #333; 
        border-radius: 25px;
        padding: 0.75rem;
    }

    .btn-login:hover {
        background-color: #393636;
        color: white;
    }

    .btn-create {
        border: 1px solid #333;
        border-radius: 25px;
        padding: 0.75rem;
        color: #333;
        background-color: transparent;
    }

    .btn-create:hover {
        background-color: #393636;
        color: white;
    }

    .divider {
        display: flex;
        align-items: center;
        text-align: center;
        margin: 2rem 0;
    }

    .divider::before,
    .divider::after {
        content: '';
        flex: 1;
        border-bottom: 1px solid #dee2e6;
    }

    .divider span {
        padding: 0 1rem;
        color: #6c757d;
    }
    .password-field {
        position: relative;
    }
    .password-toggle {
        position: absolute;
        right: 0.5rem;
        top: 50%;
        transform: translateY(-50%);
        color: #6c757d;
        text-decoration: none;
        font-size: 1.1rem;
        border: none;
        background: transparent;
    }
</style>
<div class="container">
    <div class="form-container">
        <div class="avatar-placeholder"></div>
        <h1 class="text-center mb-4 ">Log in</h1>
        @if (TempData["Message"] != null)
        {
            if(TempData["Code"] != "0"){
                <div class="alert alert-danger" role="alert">
                    @TempData["Message"]
                </div>
            }else{
                <div class="alert alert-success" role="alert">
                    @TempData["Message"]
                </div>
            }

        }
        <form method="post">
            <div class="mb-3 form-group">
                @Html.LabelFor(m => m.Username, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.Username, new { @class = "form-control", @id = "Username" })
                @Html.ValidationMessageFor(m => m.Username, null, new { @class = "text-danger" })
            </div>

            <div class="mb-4 form-group">
                @Html.LabelFor(m => m.Password, new { @class = "form-label" })
                <div class="password-field">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", @id = "Password" })
                    <button type="button" class="password-toggle" id="togglePassword">
                        <i class="fas fa-eye eyeicn" id="eyeIcon"></i>
                    </button>
                </div>
                @Html.ValidationMessageFor(m => m.Password, null, new { @class = "text-danger" })
            </div>
            <button type="submit" class="btn btn-login w-100 mb-3">Log in</button>
        </form>

        <div class="divider ">
            <span >New to our community</span>
        </div>
        <a class="btn btn-create w-100" asp-action="Register" asp-controller="Home">Create an account</a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script src="~/js/register.js"></script>